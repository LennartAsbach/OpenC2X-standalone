//defines all doxygen modules/groups

/**
 * @addtogroup sensor Sensor Connectors
 * Modules that make sensor data (GPS and OBD2) available to the other modules via zmq.
 * @{ 
 * 		@addtogroup gps GPS Service Module
 * 		The GPS module can connect to GPSd to measure real GPS data. If such data is available, it publishes it via zmq. 
 *		Alternatively, the GPS module can simulate GPS data using one of two modes: It either simulates a vehicle driving towards north on a straight line or uses previously recorded GPS traces.
 *		The GpsConfig allows to specify whether or not to simulate and which simulation mode to use.
 * 	
 * 		@addtogroup obd2 OBD2 Service Module
 * 		The OBD2 module can connect to a car's OBD2 port via serial communication. It periodically queries the vehicle speed (and RPM) and publishes it via zmq.
 *		It also allows to simulate speed, in case no vehicle is avaiable.
 *		Whether or not to simulate and the rate of querying data can be set in the Obd2Config.
 * @}
 */

/**
 * @addtogroup dcc DCC Module
 * Decentralized Congestion Control (DCC) module plays an important role in shaping the network traffic. All the broadcasted and
 * received messages pass via DCC.
 *
 * @highlight The DCC is standard conform (except for multiple active states).
 * @{
 * 		@addtogroup dccHardware DCC Hardware Communication
 * 		Communication between DCC and Ath9k WiFi Card
 * @}
 */
 
 /**
 * @addtogroup cam CA Service Module
 * The Cooperative Awareness Service Module is responsible for triggering of Cooperative Awareness Messages (CAMs).
 * A CAM is triggered if one of the following conditions hold:
 * - Position has changed more than 5 metres.
 * - Heading has changed more than 4 degrees.
 * - Speed has changed more than 1 m/sec.
 * - Time since last CAM is more than 1 second.
 *
 * The received sensor data like latest GPS position, speed, rpm of the car from GPS, OBD2 modules is included in the CAMs. 
 * The service communicates with DCC to send and receive CAMs from other stations. All the messages (sent and received) are  
 * stored in LDM as well.
 * @highlight CAM triggering is standard conform.
 * 
 */
 
 /**
 * @addtogroup denm DEN Service Module
 * The Decentralized Environmental Notification Service Module is responsible for creating DENMs when triggered by external 
 * applications (web interface in the implemented stack). The created DENMs are forwarded to DCC for broadcasting to other stations.
 * The received sensor data like latest GPS position, speed, rpm of the car from GPS, OBD2 modules is included in the DENMs.
 * stations. All the messages (sent and received) are stored in LDM as well.
 * 
 * _Note:_ The repitition of DENMs to keep a notification alive has not been implemented yet.
 */
 
 /**
  * @addtogroup ldm LDM Module
  * Local Dynamic Map is responsible for maintenance of all the data that has been broadcasted by the host or received from external stations.
  * It also serves the requests from the Http Server for displaying the data. 
  */
 
 /**
 * @addtogroup httpServer Http Server
 * A httpServer to expose LDMs data via http.
 * For a more detailed description see httpServer.
 */
 
 /** @addtogroup website Website
 * 	Displays information about the application status.
 *  A monitoring website which connects via http to httpServer over Port 1188 and displays information about the application.
 *  @{
 *  
 *  	@addtogroup layoutManager Layout Manager
 *  	Functions responsible for saving, loading, creating and locking the Layout of divs.
 *		
 *		@addtogroup utility Utility Functions
 * 		Utility functions which have no dependencies to other \.js files.
 *	
 *		@addtogroup querys Querys to httpServer
 *  	A collection of query functions to httpServer.
 *  	A bit of data processing may happen.
 *  @}
 */
 
/**
 * @addtogroup common Common Libary
 * Functionality all other modules use bundled in a common library.
 * This Project needs to be build first.
 * 	@{
 * 		@addtogroup communication Inter-module communication.
 * 		Communication between modules via zmq.
 * 	@}
 * @highlight Dedicated classes for communication via zmq, logging, and utilities.
 */





